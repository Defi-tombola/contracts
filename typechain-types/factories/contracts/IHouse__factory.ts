/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IHouse, IHouseInterface } from "../../contracts/IHouse";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "lottery_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "collectFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributePrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IHouse__factory {
  static readonly abi = _abi;
  static createInterface(): IHouseInterface {
    return new utils.Interface(_abi) as IHouseInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IHouse {
    return new Contract(address, _abi, signerOrProvider) as IHouse;
  }
}
